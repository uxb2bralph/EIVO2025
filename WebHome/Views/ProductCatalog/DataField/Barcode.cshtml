@using System.IO
@using System.Linq.Expressions


@using ModelCore.Helper

@using WebHome.Helper
@using WebHome.Models
@using WebHome.Controllers
@using WebHome.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using ModelCore.Security.MembershipManagement
@using ModelCore.Models.ViewModel
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@using Newtonsoft.Json
@using CommonLib.DataAccess

@{
    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    UserProfile _profile = Context.GetUser();
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    ProductCatalogQueryViewModel _viewModel = (ProductCatalogQueryViewModel)ViewBag.ViewModel;
}
@{
    Naming.FieldDisplayType? displayType = (Naming.FieldDisplayType?)ViewBag.DisplayType;
    ProductCatalog item = null;
}
@switch (displayType)
{
    case Naming.FieldDisplayType.Header:
        <a href="javascript:void(0);" onclick="$inquiryAgent.sort('Barcode',this);">條碼</a>
        break;
    case Naming.FieldDisplayType.DataItem:
        item = this.Model as ProductCatalog;
        <text>@(item?.Barcode)</text>
        break;
    case Naming.FieldDisplayType.SortBy:
        ProductCatalogQueryViewModel viewModel = (ProductCatalogQueryViewModel)ViewBag.ViewModel;
        if (viewModel.SortName != null)
        {
            int idx = System.Array.IndexOf(viewModel.SortName, "Barcode");
            if (idx >= 0)
            {
                TempData["SortedItems"] = (TempData["SortedItems"] as IOrderedQueryable<ProductCatalog> ??
                (IQueryable<ProductCatalog>)this.Model).OrderBy(p => p.Barcode, viewModel.SortType[idx]);
            }
        }
        break;
    case Naming.FieldDisplayType.Query:
        <div class="py-2 col">
            <div class="row">
                <label for="Barcode" class="col-md-4 col-form-label fw-bold text-nowrap">
                    條碼
                </label>
                <div class="col">
                    @{
                        editField(_viewModel, null);
                    }
                </div>
            </div>
        </div>
        break;

    case Naming.FieldDisplayType.Edit:
        item = this.Model as ProductCatalog;
        editField(_viewModel, item);
        break;
    default:
        break;
}

@functions
{
    void editField(ProductCatalogQueryViewModel _viewModel, ProductCatalog item)
    {
        <input id="Barcode" name="Barcode" class="form-control form-control-sm" type="text"
            value="@(item != null ? item.Barcode : _viewModel?.Barcode)" />
    }
}
