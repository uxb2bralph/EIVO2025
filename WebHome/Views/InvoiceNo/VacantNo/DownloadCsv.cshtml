@using System.IO
@using System.Linq.Expressions
@using System.Web
@using WebHome.Controllers
@using WebHome.Helper
@using WebHome.Models
@using WebHome.Models.ViewModel
@using ModelCore.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@functions
{
    ModelSource<InvoiceItem> models;
    IQueryable<UnassignedInvoiceNo> _model;
    IQueryable<UnassignedInvoiceNo> _items;
}
@{

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    _model = (IQueryable<UnassignedInvoiceNo>)this.Model;
    _items = _model;
    ViewBag.DataItems = _model;
    var Response = ViewContext.HttpContext.Response;

    var item = _model.First();
    var orgItem = models.GetTable<Organization>().Where(o => o.CompanyID == item.SellerID).First();

    Response.Clear();
    Response.Headers.Clear();
    Response.Headers.Append("Cache-control", "max-age=1");
    Response.ContentType = "application/octet-stream";
    Response.Headers.Append("Content-Disposition", String.Format("attachment;filename={0}", System.Web.HttpUtility.UrlEncode("空白發票_" + orgItem.ReceiptNo + "(" + String.Format("{0}{1:00}", item.InvoiceTrackCodeAssignment.InvoiceTrackCode.Year - 1911, item.InvoiceTrackCodeAssignment.InvoiceTrackCode.PeriodNo * 2) + ").csv")));

    renderConetnt();
}
@functions
{
	void renderConetnt()
	{ 
        int idx = 1;
        foreach (var item in _items)
        {
            var orgItem = item.InvoiceTrackCodeAssignment.Organization;
            var trackCode = item.InvoiceTrackCodeAssignment.InvoiceTrackCode;
            <text>@(String.Format("{0:00000}", idx++)),@(orgItem.ReceiptNo),@(String.Format("{0}{1:00}", trackCode.Year - 1911, trackCode.PeriodNo * 2)),@(trackCode.TrackCode),@(String.Format("{0:00000000}", item.InvoiceBeginNo)),@(String.Format("{0:00000000}", item.InvoiceEndNo)),@($"{trackCode.InvoiceType:00}")@(orgItem.OrganizationExtension.ExpirationDate.HasValue ? $",註記停用:{orgItem.OrganizationExtension.ExpirationDate:yyyy/MM/dd}" : null)</text>
        }
    }
}