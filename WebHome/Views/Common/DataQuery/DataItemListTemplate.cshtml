
@using System.Linq
@using System.IO
@using System.Linq.Expressions

@using Newtonsoft.Json
@using WebHome.Controllers
@using WebHome.Helper
@using WebHome.Models
@using WebHome.Models.ViewModel
@using ModelCore.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor


@functions
{
    ModelSource<InvoiceItem>? models;
    IQueryable<dynamic>? _model;
    QueryViewModel? _viewModel;

}
@RenderSection("PrepareQueryResult")
@{

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    _model = (IQueryable<dynamic>)this.Model;
    _viewModel = (QueryViewModel)ViewBag.ViewModel;

    @RenderSection("PrepareSorting");

    IQueryable<dynamic> items;
    int pageIndex = _viewModel.PageIndex ?? 0;
    int pageSize = _viewModel.PageSize ?? 10;

    if (TempData["SortedItems"] == null)
    {
        if (_viewModel.Paging == false)
        {
            items = _model;
        }
        else
        {
            items = _model
                .Skip(pageIndex * pageSize)
                .Take(pageSize);
        }
    }
    else
    {
        if (_viewModel.Paging == false)
        {
            items = ((IQueryable<dynamic>)TempData["SortedItems"]!);
        }
        else
        {
            items = ((IQueryable<dynamic>)TempData["SortedItems"]!)
                .Skip(pageIndex * pageSize)
                .Take(pageSize);
        }
    }
}

@{
    int idx = 0;
}
@foreach (var item in items)
{
    idx++;
    <tr>
        @{
            await Html.RenderPartialAsync("~/Views/Common/DataQuery/DataItem.cshtml", (object)item);
        }
    </tr>
}

