@using System.IO
@using System.Linq.Expressions



@using WebHome.Helper
@using WebHome.Models
@using WebHome.Controllers
@using WebHome.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using ModelCore.Security.MembershipManagement
@using ModelCore.Models.ViewModel
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@using Newtonsoft.Json
@functions
{
    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;
    IQueryable<Organization> _model;
    QueryViewModel _viewModel;
}
@{
    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    _viewModel = (QueryViewModel)ViewBag.ViewModel;

    _model = (IQueryable<Organization>)this.Model;

    await Html.RenderPartialAsync("~/Views/OrganizationQuery/Module/CompanyItemSorting.cshtml");

    IQueryable<Organization> items;
    int pageIndex = _viewModel.PageIndex ?? 0;
    int pageSize = _viewModel.PageSize ?? 10;

    if (TempData["SortedItems"] == null)
    {
        if (_viewModel.Paging == false)
        {
            items = _model;
        }
        else
        {
            items = _model
            .Skip(pageIndex * pageSize)
            .Take(pageSize);
        }
    }
    else
    {
        if (_viewModel.Paging == false)
        {
            items = ((IQueryable<Organization>)TempData["SortedItems"]);
        }
        else
        {
            items = ((IQueryable<Organization>)TempData["SortedItems"])
            .Skip(pageIndex * pageSize)
            .Take(pageSize);
        }
    }

}
@{
    int idx = 0;
}
@foreach (var item in items)
{
    idx++;
    <tr>
        <td>
            <input name="chkItem" class="form-check-input" type="checkbox" value="@(item.CompanyID)" />
        </td>
        <td class="text-nowrap">@(item.CompanyName)</td>
        <td class="text-center">@(item.ReceiptNo)</td>
        <td class="text-center">@($"{item.OrganizationExtension?.GoLiveDate:yyyy/MM/dd}")</td>
        <td class="text-center">@($"{item.OrganizationExtension?.ExpirationDate:yyyy/MM/dd}")</td>
        <td class="text-center">
            @if (item.BranchRelation.Any())
            {
                <a href="#"
                    onclick="actionHandler('@Html.Raw(Url.Action("ProcessHeadquarter", "Organization"))', { 'SellerID' : @(item.CompanyID) }, null, 'auto', 'auto','設定主機構');">主機構</a>
                <br />
            }
            @if (item.OrganizationCategory.Where(c => c.CategoryID == (int)CategoryDefinition.CategoryEnum.經銷商).Any())
            {
                <text>經銷商</text>
            }
        </td>
        <td class="text-center">
            @{
                ViewBag.Index = idx;
                await Html.RenderPartialAsync("~/Views/OrganizationQuery/Module/ProcessCompanyItem.cshtml", item);
            }
        </td>
    </tr>
}
