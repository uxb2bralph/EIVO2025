@using System.IO
@using System.Linq.Expressions
@using ModelCore.DataEntity
@using ModelCore.Locale
@using Newtonsoft.Json
@{

    _model = (IEnumerable<InvoiceTrackCode>)this.Model;
    _sort = (int[])ViewBag.Sort;
    _pageSize = (int?)ViewBag.PageSize ?? 10;
    _pageIndex = (int?)ViewBag.PageIndex ?? 0;

    if (_sort != null && _sort.Length > 0)
    {
        sorting();

        if (_order == null)
        {
            _items = _model.Skip(_pageIndex * _pageSize)
            .Take(_pageSize);
        }
        else
        {
            _items = _order.Skip(_pageIndex * _pageSize)
            .Take(_pageSize);
        }
    }
    else
    {
        _items = _model.Skip(_pageIndex * _pageSize)
        .Take(_pageSize);
    }
}

<table id="itemList" class="mb-0 table table-striped itemList eivo__table">
    <thead>
        <tr>
            <th scope="col" style="min-width: 120px;" aria-sort="other">發票年度</th>
            <th scope="col" style="min-width: 120px;">發票期別</th>
            <th scope="col" style="min-width: 120px;">字軌</th>
            <th scope="col" style="min-width: 120px;">類別</th>
            <th scope="col" aria-sort="other">管理</th>
        </tr>
    </thead>
    <tbody>
        @{
            int idx = 0;
        }
        @foreach (var item in _items)
        {
            idx++;
            await Html.RenderPartialAsync("~/Views/TrackCode/Module/DataItem.cshtml", item);
        }
    </tbody>
    <tfoot>
        @{
            await Html.RenderPartialAsync("~/Views/TrackCode/Module/AddItem.cshtml");
        }

    </tfoot>
</table>
<span>
    @if (_sort != null && _sort.Length > 0)
    {
        <script>
            $(function () {
                initSort(@(JsonConvert.SerializeObject(_sort)), 1);
            });
        </script>
    }
    <script>
        $(function () {
            buildSort(uiTrackCodeQuery.inquire,@(_pageIndex + 1), 1);
        });
    </script>
</span>

@functions
{

    IEnumerable<InvoiceTrackCode> _items;
    IEnumerable<InvoiceTrackCode> _model;
    IOrderedEnumerable<InvoiceTrackCode> _order;
    int[] _sort;
    int _pageSize;
    int _pageIndex;

    void sorting()
    {
        foreach (var idx in _sort)
        {
            switch (idx)
            {
                case 2:
                    _order = _order == null ? _model.OrderBy(i => i.PeriodNo) : _order.ThenBy(i => i.PeriodNo);
                    break;
                case -2:
                    _order = _order == null ? _model.OrderByDescending(i => i.PeriodNo) : _order.ThenByDescending(i => i.PeriodNo);
                    break;
                case 3:
                    _order = _order == null ? _model.OrderBy(i => i.TrackCode) : _order.ThenBy(i => i.TrackCode);
                    break;
                case -3:
                    _order = _order == null ? _model.OrderByDescending(i => i.TrackCode) : _order.ThenByDescending(i => i.TrackCode);
                    break;
            }
        }
    }

}
