@using System.IO
@using System.Linq.Expressions



@using WebHome.Helper
@using WebHome.Models
@using WebHome.Controllers
@using WebHome.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using ModelCore.Security.MembershipManagement
@using ModelCore.Models.ViewModel
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@using Newtonsoft.Json
@using CommonLib.DataAccess

@{
    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    UserProfile _profile = Context.GetUser();
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    QueryViewModel _viewModel = (QueryViewModel)ViewBag.ViewModel;
}
@{
    Naming.FieldDisplayType? displayType = (Naming.FieldDisplayType?)ViewBag.DisplayType;
}
@switch (displayType)
{
    case Naming.FieldDisplayType.Header:
<a href="javascript:void(0);" onclick="$inquiryAgent.sort('Business',this);">類別</a>
        break;
    case Naming.FieldDisplayType.DataItem:
        BusinessRelationship item = this.Model as BusinessRelationship;
        <text>@(item?.BusinessType.Business)</text>
        break;
    case Naming.FieldDisplayType.SortBy:
        QueryViewModel viewModel = (QueryViewModel)ViewBag.ViewModel;
        if (viewModel.SortName != null)
        {
            int idx = System.Array.IndexOf(viewModel.SortName, "Business");
            if (idx >= 0)
            {
                TempData["SortedItems"] = (TempData["SortedItems"] as IOrderedQueryable<BusinessRelationship> ?? (IQueryable<BusinessRelationship>)this.Model).OrderBy(p => p.BusinessID, viewModel.SortType[idx]);
            }
        }
        break;

    case Naming.FieldDisplayType.Edit:
        item = this.Model as BusinessRelationship;
        <text>
            @(item?.BusinessType?.Business)
        </text>
        break;
    default:
        break;
}



