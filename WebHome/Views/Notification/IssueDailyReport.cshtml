@using System.Linq
@using System.IO
@using System.Linq.Expressions

@using Newtonsoft.Json
@using WebHome.Controllers
@using WebHome.Helper
@using WebHome.Models
@using WebHome.Models.ViewModel
@using ModelCore.Models.ViewModel

@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@{

    ModelSource<InvoiceItem> models;
    Object[] _model;
    InquireInvoiceViewModel _viewModel;


    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    _model = (Object[])this.Model;
    _viewModel = (InquireInvoiceViewModel)ViewBag.ViewModel;

    Organization orgItem = (Organization)_model[0];
    IQueryable<InvoiceItem> invoiceItems = (IQueryable<InvoiceItem>)_model[1];
    IQueryable<InvoiceItem> cancelInvoices = (IQueryable<InvoiceItem>)_model[2];
    IQueryable<InvoiceAllowance> allowanceItems = (IQueryable<InvoiceAllowance>)_model[3];
    IQueryable<InvoiceAllowance> cancelAllowances = (IQueryable<InvoiceAllowance>)_model[4];
    List<Organization> orgList = (List<Organization>)_model[5];
    List<CDS_Document> errorItems = (List<CDS_Document>)_model[6];
    List<CDS_Document> pendingItems = (List<CDS_Document>)_model[7];
}

@if (_viewModel.ForTest == true)
{
    await Html.RenderPartialAsync("~/Views/Notification/Module/DailyReportIssued.cshtml", _model);
}
else if(invoiceItems.Any() || cancelInvoices.Any() || allowanceItems.Any() || cancelAllowances.Any())
{
    var mailing = models.GetUserListByCompanyID(orgItem.CompanyID)
            .Select(u => u.EMail).ToList();
    mailing.Add( ModelExtension.Properties.AppSettings.Default.WebMaster);

    var mailTo = String.Join(",",
            mailing
                .Select(m => m.GetEfficientString())
                .Where(m => m != null));

    if (!String.IsNullOrEmpty(mailTo))
    {
        var smtpSettings = orgItem.CustomSmtpHost.Where(s => s.Status == (int)CustomSmtpHost.StatusType.Enabled).FirstOrDefault();

        String subject = $"{orgItem.CompanyName}({_viewModel.DateFrom:yyyy/MM/dd})開立發票統計通知";
        String body = Html.Partial("~/Views/Notification/Module/DailyReportIssued.cshtml", _model).ToString();
        try
        {
            body.SendMailMessage(mailTo, subject, smtpSettings);
        }
        catch (Exception ex)
        {
            Logger.Error(ex);
            Logger.Warn($"{ex.Message}:\r\nSubject:{subject}\r\nMail To:{mailTo}");
        }
    }

}


