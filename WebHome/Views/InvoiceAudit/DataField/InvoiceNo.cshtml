@using System.IO
@using System.Linq.Expressions


@using ModelCore.Helper

@using WebHome.Helper
@using WebHome.Models
@using WebHome.Controllers
@using WebHome.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using ModelCore.Security.MembershipManagement
@using ModelCore.Models.ViewModel
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@using Newtonsoft.Json

@{
    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    UserProfile _profile = Context.GetUser();
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    InquireInvoiceViewModel _viewModel = (InquireInvoiceViewModel)ViewBag.ViewModel;
}
@{
    Naming.FieldDisplayType? displayType = (Naming.FieldDisplayType?)ViewBag.DisplayType;
}
@switch (displayType)
{
    case Naming.FieldDisplayType.Header:
        <a href="javascript:void(0);" onclick="$inquiryAgent.sort('InvoiceNo',this);">發票號碼</a>
        break;
    case Naming.FieldDisplayType.DataItem:
        InvoiceItem item = this.Model as InvoiceItem;
        <text><a
                onclick="javascript:showInvoiceModalByKeyID('@(item.InvoiceID.EncryptKey())');">@(item.TrackCode)@(item.No)</a></text>
        break;
    case Naming.FieldDisplayType.SortBy:
        InquireInvoiceViewModel viewModel = (InquireInvoiceViewModel)ViewBag.ViewModel;
        if (viewModel.SortName != null)
        {
            int idx = System.Array.IndexOf(viewModel.SortName, "InvoiceNo");
            if (idx >= 0)
            {
                if (viewModel.SortType[idx] == (int)Naming.SortType.ASC)
                {
                    if (TempData["SortedItems"] != null)
                    {
                        TempData["SortedItems"] = ((IOrderedQueryable<InvoiceItem>)TempData["SortedItems"]).ThenBy(p => p.TrackCode).ThenBy(p =>
                        p.No);
                    }
                    else
                    {
                        TempData["SortedItems"] = ((IQueryable<InvoiceItem>)this.Model).OrderBy(p => p.TrackCode).OrderBy(p => p.No);
                    }
                }
                else if (viewModel.SortType[idx] == (int)Naming.SortType.DESC)
                {
                    if (TempData["SortedItems"] != null)
                    {
                        TempData["SortedItems"] = ((IOrderedQueryable<InvoiceItem>)TempData["SortedItems"]).ThenByDescending(p =>
                        p.TrackCode).ThenByDescending(p => p.No);
                    }
                    else
                    {
                        TempData["SortedItems"] = ((IQueryable<InvoiceItem>)this.Model).OrderByDescending(p => p.TrackCode).OrderByDescending(p
                        => p.No);
                    }
                }
            }
        }
        break;
    case Naming.FieldDisplayType.Query:
        <div class="py-2 col">
            <div class="row">
                <label for="InvoiceNo" class="col-md-4 col-form-label fw-bold text-nowrap">
                    發票號碼
                </label>
                <div class="col">
                    <input id="InvoiceNo" name="InvoiceNo" type="text" class="form-control form-control-sm"
                        value="@( _viewModel?.InvoiceNo )" />
                </div>
            </div>
        </div>
        break;
    default:
        break;
}
