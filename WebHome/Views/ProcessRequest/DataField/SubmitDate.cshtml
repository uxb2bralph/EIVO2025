@using System.IO
@using System.Linq.Expressions


@using ModelCore.Helper

@using WebHome.Helper
@using WebHome.Models
@using WebHome.Controllers
@using WebHome.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using ModelCore.Security.MembershipManagement
@using ModelCore.Models.ViewModel
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@using Newtonsoft.Json

@{
    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    UserProfile _profile = Context.GetUser();
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    ProcessRequestQueryViewModel _viewModel = (ProcessRequestQueryViewModel)ViewBag.ViewModel;
}
@{
    Naming.FieldDisplayType? displayType = (Naming.FieldDisplayType?)ViewBag.DisplayType;
}
@switch (displayType)
{
    case Naming.FieldDisplayType.Header:
        <a href="javascript:void(0);" onclick="$inquiryAgent.sort('SubmitDate',this);">提交時間</a>
        break;
    case Naming.FieldDisplayType.DataItem:
        ProcessRequest item = this.Model as ProcessRequest;
        <text>@($"{item.SubmitDate:yyyy/MM/dd HH:mm:ss}")</text>
        break;
    case Naming.FieldDisplayType.SortBy:
        ProcessRequestQueryViewModel viewModel = (ProcessRequestQueryViewModel)ViewBag.ViewModel;
        if (viewModel.SortName != null)
        {
            int idx = System.Array.IndexOf(viewModel.SortName, "SubmitDate");
            if (idx >= 0)
            {
                if (viewModel.SortType[idx] == (int)Naming.SortType.ASC)
                {
                    if (TempData["SortedItems"] != null)
                    {
                        TempData["SortedItems"] = ((IOrderedQueryable<ProcessRequest>)TempData["SortedItems"]).ThenBy(p => p.SubmitDate);
                    }
                    else
                    {
                        TempData["SortedItems"] = ((IQueryable<ProcessRequest>)this.Model).OrderBy(p => p.SubmitDate);
                    }
                }
                else if (viewModel.SortType[idx] == (int)Naming.SortType.DESC)
                {
                    if (TempData["SortedItems"] != null)
                    {
                        TempData["SortedItems"] = ((IOrderedQueryable<ProcessRequest>)TempData["SortedItems"]).ThenByDescending(p =>
                        p.SubmitDate);
                    }
                    else
                    {
                        TempData["SortedItems"] = ((IQueryable<ProcessRequest>)this.Model).OrderByDescending(p => p.SubmitDate);
                    }
                }
            }
        }
        break;
    case Naming.FieldDisplayType.Query:
        <div class="py-2 col">
            <div class="row">
                <label for="AuthorizationRange" class="col-md-4 col-form-label fw-bold text-nowrap">
                    日期區間
                </label>
                <div class="col d-flex align-items-center">
                    <input id="DateFrom" name="SubmitDateFrom" type="text" placeholder="請輸入起日"
                        class="form_date form-control form-control-sm" readonly="readonly"
                        value="@($"{_viewModel?.SubmitDateFrom:yyyy/MM/dd}")" />
                    <div class="mx-2">~</div>
                    <input id="DateTo" name="SubmitDateTo" type="text" placeholder="請輸入迄日"
                        class="form_date form-control form-control-sm" readonly="readonly"
                        value='@($"{_viewModel?.SubmitDateTo:yyyy/MM/dd}")' />
                </div>
                <div class="text-danger d-flex justify-content-end text-nowrap pt-1">
                    <span id="dateAlert" class="text-danger pe-2 d-none pe-1">
                        <span class="mdi mdi-close-thick"></span>
                        結束日期須晚於開始日期
                    </span>
                </div>
            </div>
        </div>
        break;
    default:
        break;
}

<script>
    // 日期選擇器
    const dateAlert = document.querySelector("#dateAlert");
    flatpickr('#DateFrom, #DateTo', config);
</script>