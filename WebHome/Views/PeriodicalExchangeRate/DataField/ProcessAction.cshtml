@using System.IO
@using System.Linq.Expressions


@using ModelCore.Helper

@using WebHome.Helper
@using WebHome.Models
@using WebHome.Controllers
@using WebHome.Models.ViewModel
@using ModelCore.DataEntity
@using ModelCore.Helper
@using ModelCore.Locale
@using ModelCore.Security.MembershipManagement
@using ModelCore.Models.ViewModel
@using CommonLib.Core.Utility
@using CommonLib.Utility
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.Razor

@using Newtonsoft.Json
@using ApplicationResource

@{
    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;

    models = (ModelSource<InvoiceItem>)ViewContext.HttpContext.Items["Models"]!;
    UserProfile _profile = Context.GetUser();
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    QueryViewModel _viewModel = (QueryViewModel)ViewBag.ViewModel;
}
@{
    Naming.FieldDisplayType? displayType = (Naming.FieldDisplayType?)ViewBag.DisplayType;
}
@switch (displayType)
{
    case Naming.FieldDisplayType.Header:
        <text>管理</text>
        break;
    case Naming.FieldDisplayType.DataItem:
        InvoicePeriodExchangeRate item = this.Model as InvoicePeriodExchangeRate;
        <button type="button" class="editItem my-1 px-3 btn btn-sm eivo__btn--default text-nowrap"
            onclick="$inquiryAgent.editItem('@((new { item.PeriodID, item.CurrencyID }).JsonStringify().EncryptData())');">
            <i class="fal fa-edit"></i>
            編輯
        </button>
        <button type="button" class="editItem my-1 px-3 btn btn-sm eivo__btn--red text-nowrap"
            onclick="$inquiryAgent.deleteItem('@((new { item.PeriodID, item.CurrencyID }).JsonStringify().EncryptData())');">
            <i class="fal fa-trash-alt"></i>
            刪除
        </button>
        break;

    case Naming.FieldDisplayType.Edit:
        item = this.Model as InvoicePeriodExchangeRate;
        <button type="button" class="editItem my-1 px-3 btn btn-sm eivo__btn--check text-nowrap"
            onclick="$inquiryAgent.commitItem('@(ViewBag.IsNew == true ? _viewModel.EmptyKeyID : (new { item.PeriodID, item.CurrencyID }).JsonStringify().EncryptData())');">
            <i class="fas fa-check"></i>
            確定
        </button>
        <button type="button" class="editItem my-1 px-3 btn btn-sm eivo__btn--cancel text-nowrap"
            onclick="$inquiryAgent.dataItem({ 'keyID': '@((new { item?.PeriodID, item?.CurrencyID }).JsonStringify().EncryptData())','displayType':@(ViewBag.IsNew == true ? (int)Naming.FieldDisplayType.Create : (int)Naming.FieldDisplayType.DataItem) });">
            <i class="far fa-times"></i>
            取消
        </button>
        break;

    case Naming.FieldDisplayType.Create:
        item = this.Model as InvoicePeriodExchangeRate;
        <button type="button" class="editItem my-1 px-3 btn btn-sm eivo__btn--default text-nowrap"
            onclick="$inquiryAgent.editItem('@(_viewModel.EmptyKeyID)');">
            <i class="fas fa-plus"></i>
            新增
        </button>
        break;

    default:
        break;
}
